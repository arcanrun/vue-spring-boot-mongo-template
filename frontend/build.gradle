plugins {
    id "com.github.node-gradle.node" version "7.1.0"
}

node {
    // Whether to download and install a specific Node.js version or not
    // If false, it will use the globally installed Node.js
    // If true, it will download node using above parameters
    // Note that npm is bundled with Node.js
    download = true

    // Version of node to download and install (only used if download is true)
    // It will be unpacked in the workDir
    version = "22.12.0"

    // Version of Yarn to use
    // Any Yarn task first installs Yarn in the yarnWorkDir
    // It uses the specified version if defined and the latest version otherwise (by default)
    yarnVersion = "1.22.22"
    npmVersion = "8.1.0"

    // Base URL for fetching node distributions
    // Only used if download is true
    // Change it if you want to use a mirror
    // Or set to null if you want to add the repository on your own.
    distBaseUrl = "https://nodejs.org/dist"

    // The directory where Node.js is unpacked (when download is true)
    workDir = file("${project.projectDir}/.gradle/nodejs")

    // The directory where yarn is installed (when a Yarn task is used)
    yarnWorkDir = file("${project.projectDir}/.gradle/yarn")

    // The Node.js project directory location
    // This is where the package.json file and node_modules directory are located
    // By default it is at the root of the current project
    nodeProjectDir = file("${project.projectDir}")

    // Whether the plugin automatically should add the proxy configuration to npm and yarn commands
    // according the proxy configuration defined for Gradle
    // Disable this option if you want to configure the proxy for npm or yarn on your own
    // (in the .npmrc file for instance)
    nodeProxySettings = ProxySettings.SMART
}

// Task to install dependencies using Yarn
task yarnInstall(type: YarnTask) {
    args = ['install']
    inputs.file "package.json"
    inputs.file "yarn.lock"
    outputs.dir "node_modules"
}

// Task to clean build output
task cleanVueBuild {
    doFirst {
        delete fileTree(dir: "${project.projectDir}/dist") // Clean the Vue build directory
    }
}

// Task to build Vue application
task vueBuild(type: YarnTask) {
    dependsOn yarnInstall, cleanVueBuild
    args = ['run', 'build']
    inputs.dir "src"
    inputs.file "vue.config.js"
    outputs.dir "${project.projectDir}/dist"
}

// Task to serve Vue application (for development)
task startVueServer(type: YarnTask) {
    dependsOn yarnInstall
    args = ['run', 'dev']
}


task stopVueServer(type: NpxTask) {
    command = 'kill-port'
    def port = project.hasProperty('port') ? project.port.toString() : '5173'
    args = [port]
}